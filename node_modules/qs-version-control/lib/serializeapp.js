var getList = require('./getList')
var getDimensions = require('./getDimensions')
var getMeasures = require('./getMeasures')
var getVariables = require('./getVariables')

async function serializeapp(app) {
  var appObj = {} // Empty JSON

  // Generic lists
  var LISTS = [
    { sheets: 'sheet' },
    { masterobjects: 'masterobject' },
    { appprops: 'appprops' }
  ]

  // Property name mapping against methods
  var METHODS = {
    dimensions: getDimensions,
    measures: getMeasures,
    variables: getVariables
  }

  // Get app properties and load script
  appObj.properties = await app.getAppProperties()
  appObj.loadScript = await app.getScript()

  // Call functions for lists
  var data = await Promise.all(
    LISTS.map(function(d, i) {
      return getList(app, d[Object.keys(d)[0]])
    })
  )

  LISTS.forEach(function(d, y) {
    appObj[Object.keys(d)[0]] = data[y]
  })

  // Call functions for methods
  await Promise.all(
    Object.keys(METHODS).map(function(key, i) {
      return METHODS[key](app).then(function(data) {
        return (appObj[key] = data)
      })
    })
  )

  return appObj
}
module.exports = serializeapp
